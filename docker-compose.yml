
services:
  #database
  postgres:
    image: postgres:15-alpine
    container_name: dex_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=order_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dex_network

  #service
  redis:
    image: redis:7-alpine
    container_name: dex_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dex_network

  # backend api service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dex_backend
    ports:
      - "3000:3000"
    environment:
      - SERVER_PORT=3000
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dex_network

  # mock dex router service
  mock_dex_router:
    build:
      context: ./mock_dex_router
      dockerfile: Dockerfile
    container_name: dex_router
    environment:
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dex_network

  # Database service
  db_service:
    build:
      context: ./db-service
      dockerfile: Dockerfile
    container_name: dex_db_service
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/order_db
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dex_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  dex_network:
    driver: bridge
