
services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: dex_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dex_network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dex_backend
    ports:
      - "3000:3000"
    environment:
      - SERVER_PORT=3000
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mock DEX Router service
  mock_dex_router:
    build:
      context: ./mock_dex_router
      dockerfile: Dockerfile
    container_name: dex_router
    environment:
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dex_network
    healthcheck:
      test: ["CMD", "pgrep", "-f", "order_execution_engine"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis_data:
    driver: local

networks:
  dex_network:
    driver: bridge
